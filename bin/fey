#!/bin/sh
PROJECT_ROOT="$(dirname $(dirname $(realpath $0)))"
case "$1" in

	install)
		XDG_DATA_HOME="${XDG_DATA_HOME:-"$HOME/.local/share"}"
		XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-"$HOME/.config"}"
		if [ ! -d "$XDG_DATA_HOME/fey/pack/minpac/opt/minpac" ]; then
			git clone --depth 1 https://github.com/k-takata/minpac.git "$XDG_DATA_HOME/fey/pack/minpac/opt/minpac"
		fi
		if [ ! -d "$XDG_CONFIG_HOME/fey" ]; then
			mkdir -p "$XDG_CONFIG_HOME"
			cp -r "$PROJECT_ROOT/skel" "$XDG_CONFIG_HOME/fey"
		fi
		$0 sync
		echo Installed.
		;;

	sync)
		nvim --headless --cmd 'lua vim.g.fey_load_packages = true; vim.g.fey_load_config = false' -u "$PROJECT_ROOT/init.vim" +"lua minpac.update('', {['do'] = 'qall'})"
		echo Synced.
		;;

	purge)
		nvim --headless --cmd 'lua vim.g.fey_load_packages = true; vim.g.fey_load_config = false' -u "$PROJECT_ROOT/init.vim" +'lua minpac.clean(); vim.cmd"qall"'
		echo
		;;

	upgrade)
		git -C "$PROJECT_ROOT" pull
		$0 sync
		echo Upgraded.
		;;

	up)
		$0 upgrade
		;;

	default)
		cat "$PROJECT_ROOT/skel/${2:-init.lua}"
		;;

	run)
		shift
		exec nvim -u "$PROJECT_ROOT/init.vim" "$@"
		;;

	*)
		echo "install -- run this first to setup minpac and a skeleton config"
		echo "sync    -- run this every time you modify init.lua"
		echo "sync    -- run this to remove unused packages"
		echo "upgrade -- run this to fetch the latest version of FEY"
		echo "up      -- same as upgrade"
		echo "default -- show a default init.lua or config.lua (init.lua by default)"
		echo "run     -- run FEY Neovim"
		;;

esac
